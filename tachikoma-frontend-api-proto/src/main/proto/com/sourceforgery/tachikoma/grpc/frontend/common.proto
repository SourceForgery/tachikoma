syntax = "proto3";

option java_multiple_files = true;
option go_package = "github.com/SourceForgery/tachikoma";

package com.sourceforgery.tachikoma.grpc.frontend;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// Email address without recipient name
message EmailAddress {
    string email = 1;
}

// Email address with recipient name
message NamedEmailAddress {
    string email = 1;
    string name = 2;
}

// Represents an email transaction (tuple of all the recipient email addresses and an email body)
message EmailTransactionId {
    sint64 id = 1;
}

// Represents an email (tuple of a single recipient email address and an email body)
message EmailId {
    sint64 id = 1;
}

// Represents an incoming email
message IncomingEmailId {
    sint64 id = 1;
}

// Represents an e-mail notification, e.g. used for delivery status and in historic status events
message EmailNotification {
    EmailId email_id = 101;
    EmailAddress recipient_email_address = 102;
    EmailTransactionId email_transaction_id = 103;
    google.protobuf.Timestamp timestamp = 104;
    MessageId message_id = 105;
    EmailAddress sender_email_address = 106;
    oneof notification {
        SoftBouncedEvent soft_bounced_event = 201;
        HardBouncedEvent hard_bounced_event = 202;
        DeliveredEvent delivered_event = 203;
        QueuedEvent queued_event = 204;
        OpenedEvent opened_event = 205;
        ClickedEvent clicked_event = 206;
        UnsubscribedEvent unsubscribed_event = 207;
        SpamEvent spam_event = 208;
        ReportedAbuseEvent reported_abuse_event = 209;
    }
    // Email tracking data
    // Optional depending on parameters for the rpc method
    oneof tracking {
        SentEmailTrackingData email_tracking_data = 301;
        google.protobuf.Empty no_tracking_data = 302;
    }

    // Optional depending on parameters for the rpc method
    string subject = 401;

    // Metrics for clicks and opens of an email
    // Optional depending on parameters for the rpc method
    oneof metrics {
        google.protobuf.Empty no_metrics_data = 501;
        EmailMetrics email_metrics = 502;
    }
}

message EmailMetrics {
    repeated EmailMetricsOpenData opens = 101;
    repeated EmailMetricsClickData clicks = 102;
}

message EmailMetricsOpenData {
    // IP address that downloaded the tracking pixel
    string ip_address = 101;
    // User agent for the opening email
    string user_agent = 102;
    // Opened timestamp
    google.protobuf.Timestamp timestamp = 103;
}

message EmailMetricsClickData {
    // Ip address that clicked the link
    string ip_address = 101;
    // Url clicked in the email
    string clicked_url = 102;
    // User agent for the click
    string user_agent = 103;
    // Clicked timestamp
    google.protobuf.Timestamp timestamp = 104;
}

// Tracking data structure for a single email
message SentEmailTrackingData {
    // Special domain used to track links. Used instead of the normal host.
    // See future documentation on how to set up with e.g. nginx/apache httpd/lighttpd which
    // is necessary for HSTS domains.
    string tracking_domain = 101;

    // Not sent, but used in search and in callbacks
    repeated string tags = 102;

    // Data for e.g. callback processing
    // Transaction metadata merged with recipient metadata
    map<string, string> metadata = 103;
}

// Message bounced. Will be retried automatically.
message SoftBouncedEvent {
}

// Message bounced. No more retries will be done.
message HardBouncedEvent {
    // Free text saying what the other server said (if anything)
    // Will be empty if it's a connection error
    string reject_reason = 101;
}

// Message has been successfully delivered to other server
message DeliveredEvent {
}

// Message has been successfully delievered to outgoing email server
message QueuedEvent {
}

// Message has been opened
message OpenedEvent {
    // IP address that downloaded the tracking pixel
    string ip_address = 101;
    // Opened by client with user agent
    string user_agent = 102;
}

// Message has been clicked
message ClickedEvent {
    // Ip address that clicked the link
    string ip_address = 101;
    // Url clicked in the email
    string clicked_url = 102;
    // Clicked by client with user agent
    string user_agent = 103;
}

// Message has caused receiver to unsubscribe
message UnsubscribedEvent {
    // Ip address that unsubscribed
    string ip_address = 101;
}

// Message has been marked as spam
message SpamEvent {
}

// Message has been reported as abuse
message ReportedAbuseEvent {
}

// Attachments
message Attachment {
    // The data of the attachment
    bytes data = 101;
    // The content type of the attachment
    string content_type = 102;
    // Optional
    // The filename (if any) for this attachment
    string file_name = 103;
}

// MessageId
message MessageId {
    string message_id = 101;
}

// The reason for a blocked email address
enum BlockedReason {
    UNSUBSCRIBED = 0;
    SPAM_MARKED = 1;
    HARD_BOUNCED = 2;
}
